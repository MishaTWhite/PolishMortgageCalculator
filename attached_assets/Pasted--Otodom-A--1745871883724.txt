Дополнения к плану скрапера для Otodom (устойчивость + масштабирование)
A. Улучшения базовой устойчивости скрапера
Явное управление тайм-аутами

Увеличить timeout до 60 секунд для goto, waitForSelector, newPage операций.

Настроить navigationTimeout и defaultTimeout через CONTEXT_OPTIONS.

Проверка успешной загрузки страницы

После page.goto обязательно проверять наличие ключевых элементов (article, main).

При отсутствии — бросать ошибку и пробовать перезапуск через retryOperation.

Вынести настройки браузера и контекста в отдельный файл

Например, server/browserConfig.ts, чтобы можно было легко обновлять параметры (User-Agent, viewport, locale).

Подробное логирование

Логировать:

начало и конец каждой страницы;

каждый клик на "следующую страницу";

обнаружение аномалий (например, пустые страницы или подозрительный редирект);

ошибки и перезапуски браузера.

Автоматический перезапуск браузера

При накоплении нескольких ошибок подряд или по достижении лимита страниц перезапускать браузер с нуля.

Защита от антибот-страниц

Проверять содержание страницы на наличие слов вроде captcha, blocked, robot verification.

При обнаружении — перезапуск сессии.

B. Расширения для работы с большим объёмом данных
Шардирование задач

Разделить сбор данных по районам/частям города.

Работать малыми партиями (например, 1 район → 1 задача).

Очередь задач с контролем параллельности

Ограничить количество одновременно работающих браузеров (1–2 для слабого сервера).

Не запускать десятки процессов сразу.

Кеширование результатов на каждой странице

После обработки каждой страницы сохранять промежуточные данные:

В файл (fs.appendFile)

В базу данных

Так при падении процесса прогресс не потеряется.

Ротация User-Agent'ов и параметров браузера

Подготовить 3–5 разных User-Agent и конфигураций viewport.

Случайным образом выбирать их при каждом новом запуске браузера.

Эмуляция пользовательского поведения

В некоторых случаях:

Кликать случайно на карточку квартиры и возвращаться обратно (page.goBack()).

Выполнять лёгкие скроллы страницы.

Понизит вероятность антибот-блокировок.

Перезагрузка браузера каждые X страниц

Например, каждые 10 страниц скрапинга независимо от ошибок делать полную перезагрузку браузера.

Это сбрасывает возможные утечки памяти и трекинг.

Автоматический перезапуск процесса при крашах

При Out of Memory, краше браузера или фатальной ошибке запускать новый процесс заново.

Можно предусмотреть сохранение номера текущего района/страницы для продолжения.

Мониторинг скорости ответов

Отслеживать время загрузки страниц.

Если оно превышает 15–20 секунд стабильно — переходить в более "медленный" режим работы (длинные задержки).

✨ Резюме
Эти доработки позволят:

Собирать тысячи квартир в день даже на слабом сервере

Минимизировать риск блокировки Otodom

Легко восстанавливать скрапинг после ошибок

Постепенно наращивать масштабы без кардинальных переделок архитектуры
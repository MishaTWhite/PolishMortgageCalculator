/**
 * Super Fast Test
 * 
 * Ультра-минимальная версия тестового скрапера с очень быстрым выполнением
 * и минимальным количеством действий. Только самое необходимое.
 */

import * as fs from 'fs';
import { chromium } from 'playwright';

const COOKIES_FILE = './attached_assets/Pasted-1-Cookie-cooki-1745927642029.txt';
const TARGET_URL = 'https://www.otodom.pl/pl/oferty/sprzedaz/mieszkanie/warszawa/srodmiescie?roomsNumber=%5BTHREE%5D';

(async () => {
  console.log('Starting super fast test...');
  
  try {
    // Загружаем cookies из файла
    const fileContent = fs.readFileSync(COOKIES_FILE, 'utf-8');
    const { cookies } = JSON.parse(fileContent);
    console.log(`Loaded ${cookies.length} cookies`);
    
    // Запускаем браузер и создаем контекст
    const browser = await chromium.launch({
      headless: true,
      executablePath: '/nix/store/zi4f80l169xlmivz8vja8wlphq74qqk0-chromium-125.0.6422.141/bin/chromium',
      args: ['--no-sandbox', '--disable-dev-shm-usage']
    });
    
    const context = await browser.newContext();
    await context.addCookies(cookies);
    
    // Создаем страницу и переходим по URL
    const page = await context.newPage();
    const response = await page.goto(TARGET_URL, {
      waitUntil: 'domcontentloaded',
      timeout: 15000
    });
    
    // Получаем основную информацию
    console.log(`Status code: ${response ? response.status() : 'unknown'}`);
    console.log(`Page title: ${await page.title()}`);
    
    // Проверка на CloudFront блок
    const content = await page.content();
    const isBlocked = content.includes('Generated by cloudfront');
    console.log(`CloudFront block detected: ${isBlocked}`);
    
    // Сохраняем скриншот
    await page.screenshot({ path: './logs/screenshot_success.png' });
    
    // Проверяем наличие объявлений
    const articlesCount = await page.evaluate(() => document.querySelectorAll('article').length);
    console.log(`Articles found: ${articlesCount}`);
    
    // Закрываем все ресурсы и завершаем тест
    await page.close();
    await context.close();
    await browser.close();
    
    console.log('Test completed successfully!');
    
    if (response?.status() === 200 && !isBlocked && articlesCount > 0) {
      console.log('VERDICT: SUCCESS - Protection bypassed and listings found!');
    } else {
      console.log('VERDICT: PARTIAL - Please check logs for details');
    }
    
  } catch (error) {
    console.error(`Test failed: ${error.message}`);
  }
  
  // Принудительно завершаем процесс
  setTimeout(() => process.exit(0), 1000);
})();